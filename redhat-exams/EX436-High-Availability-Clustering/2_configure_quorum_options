##INFO TAKEN FROM REDHAT'S ONLINE DOCUMENTATION
https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/8/html/configuring_and_managing_high_availability_clusters/assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters#assembly_configuring-cluster-quorum-configuring-and-managing-high-availability-clusters

#WHAT IS QURUM


#QUORUM OPTIONS

last_man_standing:
------------------
This option will allow for a cluster to temporary operate with a lower number of nodes from the ones expected.
With this option the cluster will tolerate 1 node working only for the amount of time specified in "last_man_standing_window"
This option also works in tandum with "wait_for_all". Reason being is that the cluster will need a full account of all nodes
to come up.
If quorum is not restored then the cluster will stop working.


last_man_standing_window:
-------------------------
You give a specific time window for the "last_man_standing" to make a decision on which group of nodes
should remain operational.


wait_for_all:
-------------
It knows the original number of nodes in a cluster and it expects for all of them to be operational.
However if a node or group of nodes goes down, this option is ignored for the duration specified in "last_man_standing_window"
so "last_man_standing" will take over, if the latter is enabled that is.


auto_tie_breaker:
-----------------
When enabled the cluster can operate with half of the nodes being operational. 
This option is used when there is an even number of nodes.
Which partition of nodes becomes the dominant node is determined by the number of weight on each node.
When a cluster has an even number of nodes, a split scenario (e.g., 2 vs. 2 in a 4-node cluster) can make it 
impossible to establish quorum under normal majority rules. The auto_tie_breaker resolves this by assigning 
additional "votes" to the lowest node ID in the cluster, effectively giving it extra weight.
